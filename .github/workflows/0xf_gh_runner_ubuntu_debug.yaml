name: 0xf ➼ Debug (gh-runner) Ubuntu-22.04
#Image: https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
on:
  workflow_dispatch:
env:
  #Authenticate with Ephemeral Key: https://login.tailscale.com/admin/settings/keys
  TSKEY: tskey-auth-ksYVhg1CNTRL-A5QDDdH66vU2pVMcgBy2wUYwzgL4Sv2F
  THOST: gh-runner-ubuntu
  TUSER: runner
  
jobs:
  build:
    runs-on: ubuntu-latest
    #Default Timeout= 6 Hr (360 Mins) : https://nesin.io/blog/github-action-timeout
    #Docs: https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration
    timeout-minutes: 690000 
    permissions:
      contents: write
      
    steps:
        
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: main
          
      - name: Setup Tailscale
        run: |
          #Download & Chmod
          sudo curl -qfSL "https://raw.githubusercontent.com/Azathothas/Static-Binaries/main/tailscale/tailscale_amd_x86_64_Linux" -o "/usr/local/bin/tailscale"
          sudo curl -qfSL "https://raw.githubusercontent.com/Azathothas/Static-Binaries/main/tailscale/tailscaled_amd_x86_64_Linux" -o "/usr/local/bin/tailscaled"
          sudo chmod +xwr /usr/local/bin/tailscale*
          #Enable Userspace Networking
          sudo tailscaled --tun=userspace-networking --socks5-server=localhost:9025 --outbound-http-proxy-listen=localhost:9025 >/dev/null 2>&1 &
          #Authenticate with Ephemeral Key: https://login.tailscale.com/admin/settings/keys
          sudo tailscale up --ssh --hostname="${{ env.THOST }}" --authkey="${{ env.TSKEY }}" 
          #Check Status
          sudo tailscale status --peers=false
          #Get SSH String
          SSH_IP=$(sudo tailscale ip -4 | tr -d '\n')
          ssh_connection_string="SSH: ssh $USER@$SSH_IP"
          echo -e "$ssh_connection_string"
          sleep 60s
          #Also shows up on: https://login.tailscale.com/admin/machines
      
      - name: Install CoreUtils
        #if: env.versions_same != 'true'
        run: |
           sudo apt-get update -y
           sudo apt-get --fix-missing
           sudo apt-get install -y bison build-essential ca-certificates ccache flex '*glibc*' jq 'libssl*' lzip musl musl-dev musl-tools 'openssl*' p7zip-full pkg-config qemu-user-static wget
        continue-on-error: true

      - name: Install StaticX
        run: |
          sudo apt-get install -y --no-install-recommends autoconf automake autopoint binutils bison build-essential ca-certificates flex file jq patch patchelf pkg-config python3-pip qemu-user-static wget 
          pip3 install scons
          pip3 install staticx
          pip3 install pyinstaller
          pip3 install py2static
          pip3 install typer
        continue-on-error: true
        
      - name: Install Addons
        run: |
           # for rust & cargo
           cargo install -f cross  
           # for binaries
           # eget for bins
           sudo wget "https://raw.githubusercontent.com/Azathothas/Toolpacks/main/x86_64/eget" -O "/usr/local/bin/eget"
           sudo chmod +xwr "/usr/local/bin/eget"
           # All Bins
           sudo eget "Azathothas/Toolpacks" --asset "toolpack_x86_64.tar.bz2" --all --to "/usr/local/bin" && sudo chmod +xwr /usr/local/bin/*
        continue-on-error: true
        
      - name: Install Zig
        run: |
         cd $(mktemp -d) && 
         curl -qfSLJO $(curl -qfsSL "https://ziglang.org/download/index.json" | jq -r '.master | ."x86_64-linux".tarball')
         find . -type f -name '*.tar*' -exec tar -xvf {} \;
         sudo mkdir -p "/usr/local/zig" && sudo mv "$(find . -maxdepth 1 -type d | grep -v '^.$')"/* "/usr/local/zig" 
         export PATH="/usr/local/zig:/usr/local/zig/lib:/usr/local/zig/lib/include:$PATH"
        continue-on-error: true
        
      - name: Run Custom Cmd
        run: |
           echo "Hellow"
        continue-on-error: true
        
      - name: Breakpoint || Sleep ∞
        run: |        
          while :; do sleep 1; done  
